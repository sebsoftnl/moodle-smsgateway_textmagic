<?php
/**
 * GetStateResponse
 *
 * PHP version 5
 *
 * @category Class
 * @package  TextMagic
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Textmagic API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.22
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace TextMagic\Models;

use \ArrayAccess;
use \TextMagic\ObjectSerializer;

/**
 * GetStateResponse Class Doc Comment
 *
 * @category Class
 * @package  TextMagic
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class GetStateResponse implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'GetStateResponse';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'systemCacheClear' => 'int',
        'systemExit' => 'int',
        'systemAlert' => 'int',
        'systemAccountStateChanged' => 'int',
        'systemAccountClosed' => 'int',
        'systemAccountAdditionalFields' => 'int',
        'systemAccountPermissionsChanged' => 'int',
        'userProfileChanged' => 'int',
        'userBalanceChanged' => 'int',
        'userImpersonationEnd' => 'int',
        'messageDeleted' => 'int',
        'messageIncoming' => 'int',
        'messageIncomingDeleted' => 'int',
        'messageStateChanged' => 'int',
        'messageBulkEnd' => 'int',
        'messageWipeEnd' => 'int',
        'messageSent' => 'int',
        'messageSessionDeleted' => 'int',
        'messageCacheClear' => 'int',
        'messageIncomingCacheClear' => 'int',
        'messageScheduleAdded' => 'int',
        'messageScheduleStateChanged' => 'int',
        'messageScheduleDeleted' => 'int',
        'messageScheduleNotSentStateChanged' => 'int',
        'messageScheduleCacheClear' => 'int',
        'messageTemplateCacheClear' => 'int',
        'callFinished' => 'int',
        'chatCreated' => 'int',
        'chatMarkedAsRead' => 'int',
        'chatMuted' => 'int',
        'chatUnmuted' => 'int',
        'chatPinned' => 'int',
        'chatUnpinned' => 'int',
        'chatDeleted' => 'int',
        'chatClosed' => 'int',
        'chatReopened' => 'int',
        'chatCacheClear' => 'int',
        'chatRead' => 'int',
        'chatUnread' => 'int',
        'contactAdded' => 'int',
        'contactDeleted' => 'int',
        'contactStateChanged' => 'int',
        'listAdded' => 'int',
        'listDeleted' => 'int',
        'listStateChanged' => 'int',
        'contactWipeEnd' => 'int',
        'contactImportEnd' => 'int',
        'contactCacheClear' => 'int',
        'listCacheClear' => 'int',
        'customFieldsCacheClear' => 'int',
        'progressCarrierBulkLookup' => 'int',
        'progressEmailBulkLookup' => 'int',
        'progressSubAccountBulkImport' => 'int',
        'progressContactBulkImport' => 'int',
        'forceRefreshWebApp' => 'int',
        'chatSenderSettingsChanged' => 'int',
        'countrySenderSettingsChanged' => 'int',
        'chatSummaryChunk' => 'int',
        'chatWaysToReplyChunk' => 'int',
        'chatSuggestedReplyChunk' => 'int',
        'userSubscriptionChanged' => 'int',
        'userSubscriptionDeleted' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'systemCacheClear' => null,
        'systemExit' => null,
        'systemAlert' => null,
        'systemAccountStateChanged' => null,
        'systemAccountClosed' => null,
        'systemAccountAdditionalFields' => null,
        'systemAccountPermissionsChanged' => null,
        'userProfileChanged' => null,
        'userBalanceChanged' => null,
        'userImpersonationEnd' => null,
        'messageDeleted' => null,
        'messageIncoming' => null,
        'messageIncomingDeleted' => null,
        'messageStateChanged' => null,
        'messageBulkEnd' => null,
        'messageWipeEnd' => null,
        'messageSent' => null,
        'messageSessionDeleted' => null,
        'messageCacheClear' => null,
        'messageIncomingCacheClear' => null,
        'messageScheduleAdded' => null,
        'messageScheduleStateChanged' => null,
        'messageScheduleDeleted' => null,
        'messageScheduleNotSentStateChanged' => null,
        'messageScheduleCacheClear' => null,
        'messageTemplateCacheClear' => null,
        'callFinished' => null,
        'chatCreated' => null,
        'chatMarkedAsRead' => null,
        'chatMuted' => null,
        'chatUnmuted' => null,
        'chatPinned' => null,
        'chatUnpinned' => null,
        'chatDeleted' => null,
        'chatClosed' => null,
        'chatReopened' => null,
        'chatCacheClear' => null,
        'chatRead' => null,
        'chatUnread' => null,
        'contactAdded' => null,
        'contactDeleted' => null,
        'contactStateChanged' => null,
        'listAdded' => null,
        'listDeleted' => null,
        'listStateChanged' => null,
        'contactWipeEnd' => null,
        'contactImportEnd' => null,
        'contactCacheClear' => null,
        'listCacheClear' => null,
        'customFieldsCacheClear' => null,
        'progressCarrierBulkLookup' => null,
        'progressEmailBulkLookup' => null,
        'progressSubAccountBulkImport' => null,
        'progressContactBulkImport' => null,
        'forceRefreshWebApp' => null,
        'chatSenderSettingsChanged' => null,
        'countrySenderSettingsChanged' => null,
        'chatSummaryChunk' => null,
        'chatWaysToReplyChunk' => null,
        'chatSuggestedReplyChunk' => null,
        'userSubscriptionChanged' => null,
        'userSubscriptionDeleted' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'systemCacheClear' => 'systemCacheClear',
        'systemExit' => 'systemExit',
        'systemAlert' => 'systemAlert',
        'systemAccountStateChanged' => 'systemAccountStateChanged',
        'systemAccountClosed' => 'systemAccountClosed',
        'systemAccountAdditionalFields' => 'systemAccountAdditionalFields',
        'systemAccountPermissionsChanged' => 'systemAccountPermissionsChanged',
        'userProfileChanged' => 'userProfileChanged',
        'userBalanceChanged' => 'userBalanceChanged',
        'userImpersonationEnd' => 'userImpersonationEnd',
        'messageDeleted' => 'messageDeleted',
        'messageIncoming' => 'messageIncoming',
        'messageIncomingDeleted' => 'messageIncomingDeleted',
        'messageStateChanged' => 'messageStateChanged',
        'messageBulkEnd' => 'messageBulkEnd',
        'messageWipeEnd' => 'messageWipeEnd',
        'messageSent' => 'messageSent',
        'messageSessionDeleted' => 'messageSessionDeleted',
        'messageCacheClear' => 'messageCacheClear',
        'messageIncomingCacheClear' => 'messageIncomingCacheClear',
        'messageScheduleAdded' => 'messageScheduleAdded',
        'messageScheduleStateChanged' => 'messageScheduleStateChanged',
        'messageScheduleDeleted' => 'messageScheduleDeleted',
        'messageScheduleNotSentStateChanged' => 'messageScheduleNotSentStateChanged',
        'messageScheduleCacheClear' => 'messageScheduleCacheClear',
        'messageTemplateCacheClear' => 'messageTemplateCacheClear',
        'callFinished' => 'callFinished',
        'chatCreated' => 'chatCreated',
        'chatMarkedAsRead' => 'chatMarkedAsRead',
        'chatMuted' => 'chatMuted',
        'chatUnmuted' => 'chatUnmuted',
        'chatPinned' => 'chatPinned',
        'chatUnpinned' => 'chatUnpinned',
        'chatDeleted' => 'chatDeleted',
        'chatClosed' => 'chatClosed',
        'chatReopened' => 'chatReopened',
        'chatCacheClear' => 'chatCacheClear',
        'chatRead' => 'chatRead',
        'chatUnread' => 'chatUnread',
        'contactAdded' => 'contactAdded',
        'contactDeleted' => 'contactDeleted',
        'contactStateChanged' => 'contactStateChanged',
        'listAdded' => 'listAdded',
        'listDeleted' => 'listDeleted',
        'listStateChanged' => 'listStateChanged',
        'contactWipeEnd' => 'contactWipeEnd',
        'contactImportEnd' => 'contactImportEnd',
        'contactCacheClear' => 'contactCacheClear',
        'listCacheClear' => 'listCacheClear',
        'customFieldsCacheClear' => 'customFieldsCacheClear',
        'progressCarrierBulkLookup' => 'progressCarrierBulkLookup',
        'progressEmailBulkLookup' => 'progressEmailBulkLookup',
        'progressSubAccountBulkImport' => 'progressSubAccountBulkImport',
        'progressContactBulkImport' => 'progressContactBulkImport',
        'forceRefreshWebApp' => 'forceRefreshWebApp',
        'chatSenderSettingsChanged' => 'chatSenderSettingsChanged',
        'countrySenderSettingsChanged' => 'countrySenderSettingsChanged',
        'chatSummaryChunk' => 'chatSummaryChunk',
        'chatWaysToReplyChunk' => 'chatWaysToReplyChunk',
        'chatSuggestedReplyChunk' => 'chatSuggestedReplyChunk',
        'userSubscriptionChanged' => 'userSubscriptionChanged',
        'userSubscriptionDeleted' => 'userSubscriptionDeleted'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'systemCacheClear' => 'setSystemCacheClear',
        'systemExit' => 'setSystemExit',
        'systemAlert' => 'setSystemAlert',
        'systemAccountStateChanged' => 'setSystemAccountStateChanged',
        'systemAccountClosed' => 'setSystemAccountClosed',
        'systemAccountAdditionalFields' => 'setSystemAccountAdditionalFields',
        'systemAccountPermissionsChanged' => 'setSystemAccountPermissionsChanged',
        'userProfileChanged' => 'setUserProfileChanged',
        'userBalanceChanged' => 'setUserBalanceChanged',
        'userImpersonationEnd' => 'setUserImpersonationEnd',
        'messageDeleted' => 'setMessageDeleted',
        'messageIncoming' => 'setMessageIncoming',
        'messageIncomingDeleted' => 'setMessageIncomingDeleted',
        'messageStateChanged' => 'setMessageStateChanged',
        'messageBulkEnd' => 'setMessageBulkEnd',
        'messageWipeEnd' => 'setMessageWipeEnd',
        'messageSent' => 'setMessageSent',
        'messageSessionDeleted' => 'setMessageSessionDeleted',
        'messageCacheClear' => 'setMessageCacheClear',
        'messageIncomingCacheClear' => 'setMessageIncomingCacheClear',
        'messageScheduleAdded' => 'setMessageScheduleAdded',
        'messageScheduleStateChanged' => 'setMessageScheduleStateChanged',
        'messageScheduleDeleted' => 'setMessageScheduleDeleted',
        'messageScheduleNotSentStateChanged' => 'setMessageScheduleNotSentStateChanged',
        'messageScheduleCacheClear' => 'setMessageScheduleCacheClear',
        'messageTemplateCacheClear' => 'setMessageTemplateCacheClear',
        'callFinished' => 'setCallFinished',
        'chatCreated' => 'setChatCreated',
        'chatMarkedAsRead' => 'setChatMarkedAsRead',
        'chatMuted' => 'setChatMuted',
        'chatUnmuted' => 'setChatUnmuted',
        'chatPinned' => 'setChatPinned',
        'chatUnpinned' => 'setChatUnpinned',
        'chatDeleted' => 'setChatDeleted',
        'chatClosed' => 'setChatClosed',
        'chatReopened' => 'setChatReopened',
        'chatCacheClear' => 'setChatCacheClear',
        'chatRead' => 'setChatRead',
        'chatUnread' => 'setChatUnread',
        'contactAdded' => 'setContactAdded',
        'contactDeleted' => 'setContactDeleted',
        'contactStateChanged' => 'setContactStateChanged',
        'listAdded' => 'setListAdded',
        'listDeleted' => 'setListDeleted',
        'listStateChanged' => 'setListStateChanged',
        'contactWipeEnd' => 'setContactWipeEnd',
        'contactImportEnd' => 'setContactImportEnd',
        'contactCacheClear' => 'setContactCacheClear',
        'listCacheClear' => 'setListCacheClear',
        'customFieldsCacheClear' => 'setCustomFieldsCacheClear',
        'progressCarrierBulkLookup' => 'setProgressCarrierBulkLookup',
        'progressEmailBulkLookup' => 'setProgressEmailBulkLookup',
        'progressSubAccountBulkImport' => 'setProgressSubAccountBulkImport',
        'progressContactBulkImport' => 'setProgressContactBulkImport',
        'forceRefreshWebApp' => 'setForceRefreshWebApp',
        'chatSenderSettingsChanged' => 'setChatSenderSettingsChanged',
        'countrySenderSettingsChanged' => 'setCountrySenderSettingsChanged',
        'chatSummaryChunk' => 'setChatSummaryChunk',
        'chatWaysToReplyChunk' => 'setChatWaysToReplyChunk',
        'chatSuggestedReplyChunk' => 'setChatSuggestedReplyChunk',
        'userSubscriptionChanged' => 'setUserSubscriptionChanged',
        'userSubscriptionDeleted' => 'setUserSubscriptionDeleted'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'systemCacheClear' => 'getSystemCacheClear',
        'systemExit' => 'getSystemExit',
        'systemAlert' => 'getSystemAlert',
        'systemAccountStateChanged' => 'getSystemAccountStateChanged',
        'systemAccountClosed' => 'getSystemAccountClosed',
        'systemAccountAdditionalFields' => 'getSystemAccountAdditionalFields',
        'systemAccountPermissionsChanged' => 'getSystemAccountPermissionsChanged',
        'userProfileChanged' => 'getUserProfileChanged',
        'userBalanceChanged' => 'getUserBalanceChanged',
        'userImpersonationEnd' => 'getUserImpersonationEnd',
        'messageDeleted' => 'getMessageDeleted',
        'messageIncoming' => 'getMessageIncoming',
        'messageIncomingDeleted' => 'getMessageIncomingDeleted',
        'messageStateChanged' => 'getMessageStateChanged',
        'messageBulkEnd' => 'getMessageBulkEnd',
        'messageWipeEnd' => 'getMessageWipeEnd',
        'messageSent' => 'getMessageSent',
        'messageSessionDeleted' => 'getMessageSessionDeleted',
        'messageCacheClear' => 'getMessageCacheClear',
        'messageIncomingCacheClear' => 'getMessageIncomingCacheClear',
        'messageScheduleAdded' => 'getMessageScheduleAdded',
        'messageScheduleStateChanged' => 'getMessageScheduleStateChanged',
        'messageScheduleDeleted' => 'getMessageScheduleDeleted',
        'messageScheduleNotSentStateChanged' => 'getMessageScheduleNotSentStateChanged',
        'messageScheduleCacheClear' => 'getMessageScheduleCacheClear',
        'messageTemplateCacheClear' => 'getMessageTemplateCacheClear',
        'callFinished' => 'getCallFinished',
        'chatCreated' => 'getChatCreated',
        'chatMarkedAsRead' => 'getChatMarkedAsRead',
        'chatMuted' => 'getChatMuted',
        'chatUnmuted' => 'getChatUnmuted',
        'chatPinned' => 'getChatPinned',
        'chatUnpinned' => 'getChatUnpinned',
        'chatDeleted' => 'getChatDeleted',
        'chatClosed' => 'getChatClosed',
        'chatReopened' => 'getChatReopened',
        'chatCacheClear' => 'getChatCacheClear',
        'chatRead' => 'getChatRead',
        'chatUnread' => 'getChatUnread',
        'contactAdded' => 'getContactAdded',
        'contactDeleted' => 'getContactDeleted',
        'contactStateChanged' => 'getContactStateChanged',
        'listAdded' => 'getListAdded',
        'listDeleted' => 'getListDeleted',
        'listStateChanged' => 'getListStateChanged',
        'contactWipeEnd' => 'getContactWipeEnd',
        'contactImportEnd' => 'getContactImportEnd',
        'contactCacheClear' => 'getContactCacheClear',
        'listCacheClear' => 'getListCacheClear',
        'customFieldsCacheClear' => 'getCustomFieldsCacheClear',
        'progressCarrierBulkLookup' => 'getProgressCarrierBulkLookup',
        'progressEmailBulkLookup' => 'getProgressEmailBulkLookup',
        'progressSubAccountBulkImport' => 'getProgressSubAccountBulkImport',
        'progressContactBulkImport' => 'getProgressContactBulkImport',
        'forceRefreshWebApp' => 'getForceRefreshWebApp',
        'chatSenderSettingsChanged' => 'getChatSenderSettingsChanged',
        'countrySenderSettingsChanged' => 'getCountrySenderSettingsChanged',
        'chatSummaryChunk' => 'getChatSummaryChunk',
        'chatWaysToReplyChunk' => 'getChatWaysToReplyChunk',
        'chatSuggestedReplyChunk' => 'getChatSuggestedReplyChunk',
        'userSubscriptionChanged' => 'getUserSubscriptionChanged',
        'userSubscriptionDeleted' => 'getUserSubscriptionDeleted'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['systemCacheClear'] = isset($data['systemCacheClear']) ? $data['systemCacheClear'] : null;
        $this->container['systemExit'] = isset($data['systemExit']) ? $data['systemExit'] : null;
        $this->container['systemAlert'] = isset($data['systemAlert']) ? $data['systemAlert'] : null;
        $this->container['systemAccountStateChanged'] = isset($data['systemAccountStateChanged']) ? $data['systemAccountStateChanged'] : null;
        $this->container['systemAccountClosed'] = isset($data['systemAccountClosed']) ? $data['systemAccountClosed'] : null;
        $this->container['systemAccountAdditionalFields'] = isset($data['systemAccountAdditionalFields']) ? $data['systemAccountAdditionalFields'] : null;
        $this->container['systemAccountPermissionsChanged'] = isset($data['systemAccountPermissionsChanged']) ? $data['systemAccountPermissionsChanged'] : null;
        $this->container['userProfileChanged'] = isset($data['userProfileChanged']) ? $data['userProfileChanged'] : null;
        $this->container['userBalanceChanged'] = isset($data['userBalanceChanged']) ? $data['userBalanceChanged'] : null;
        $this->container['userImpersonationEnd'] = isset($data['userImpersonationEnd']) ? $data['userImpersonationEnd'] : null;
        $this->container['messageDeleted'] = isset($data['messageDeleted']) ? $data['messageDeleted'] : null;
        $this->container['messageIncoming'] = isset($data['messageIncoming']) ? $data['messageIncoming'] : null;
        $this->container['messageIncomingDeleted'] = isset($data['messageIncomingDeleted']) ? $data['messageIncomingDeleted'] : null;
        $this->container['messageStateChanged'] = isset($data['messageStateChanged']) ? $data['messageStateChanged'] : null;
        $this->container['messageBulkEnd'] = isset($data['messageBulkEnd']) ? $data['messageBulkEnd'] : null;
        $this->container['messageWipeEnd'] = isset($data['messageWipeEnd']) ? $data['messageWipeEnd'] : null;
        $this->container['messageSent'] = isset($data['messageSent']) ? $data['messageSent'] : null;
        $this->container['messageSessionDeleted'] = isset($data['messageSessionDeleted']) ? $data['messageSessionDeleted'] : null;
        $this->container['messageCacheClear'] = isset($data['messageCacheClear']) ? $data['messageCacheClear'] : null;
        $this->container['messageIncomingCacheClear'] = isset($data['messageIncomingCacheClear']) ? $data['messageIncomingCacheClear'] : null;
        $this->container['messageScheduleAdded'] = isset($data['messageScheduleAdded']) ? $data['messageScheduleAdded'] : null;
        $this->container['messageScheduleStateChanged'] = isset($data['messageScheduleStateChanged']) ? $data['messageScheduleStateChanged'] : null;
        $this->container['messageScheduleDeleted'] = isset($data['messageScheduleDeleted']) ? $data['messageScheduleDeleted'] : null;
        $this->container['messageScheduleNotSentStateChanged'] = isset($data['messageScheduleNotSentStateChanged']) ? $data['messageScheduleNotSentStateChanged'] : null;
        $this->container['messageScheduleCacheClear'] = isset($data['messageScheduleCacheClear']) ? $data['messageScheduleCacheClear'] : null;
        $this->container['messageTemplateCacheClear'] = isset($data['messageTemplateCacheClear']) ? $data['messageTemplateCacheClear'] : null;
        $this->container['callFinished'] = isset($data['callFinished']) ? $data['callFinished'] : null;
        $this->container['chatCreated'] = isset($data['chatCreated']) ? $data['chatCreated'] : null;
        $this->container['chatMarkedAsRead'] = isset($data['chatMarkedAsRead']) ? $data['chatMarkedAsRead'] : null;
        $this->container['chatMuted'] = isset($data['chatMuted']) ? $data['chatMuted'] : null;
        $this->container['chatUnmuted'] = isset($data['chatUnmuted']) ? $data['chatUnmuted'] : null;
        $this->container['chatPinned'] = isset($data['chatPinned']) ? $data['chatPinned'] : null;
        $this->container['chatUnpinned'] = isset($data['chatUnpinned']) ? $data['chatUnpinned'] : null;
        $this->container['chatDeleted'] = isset($data['chatDeleted']) ? $data['chatDeleted'] : null;
        $this->container['chatClosed'] = isset($data['chatClosed']) ? $data['chatClosed'] : null;
        $this->container['chatReopened'] = isset($data['chatReopened']) ? $data['chatReopened'] : null;
        $this->container['chatCacheClear'] = isset($data['chatCacheClear']) ? $data['chatCacheClear'] : null;
        $this->container['chatRead'] = isset($data['chatRead']) ? $data['chatRead'] : null;
        $this->container['chatUnread'] = isset($data['chatUnread']) ? $data['chatUnread'] : null;
        $this->container['contactAdded'] = isset($data['contactAdded']) ? $data['contactAdded'] : null;
        $this->container['contactDeleted'] = isset($data['contactDeleted']) ? $data['contactDeleted'] : null;
        $this->container['contactStateChanged'] = isset($data['contactStateChanged']) ? $data['contactStateChanged'] : null;
        $this->container['listAdded'] = isset($data['listAdded']) ? $data['listAdded'] : null;
        $this->container['listDeleted'] = isset($data['listDeleted']) ? $data['listDeleted'] : null;
        $this->container['listStateChanged'] = isset($data['listStateChanged']) ? $data['listStateChanged'] : null;
        $this->container['contactWipeEnd'] = isset($data['contactWipeEnd']) ? $data['contactWipeEnd'] : null;
        $this->container['contactImportEnd'] = isset($data['contactImportEnd']) ? $data['contactImportEnd'] : null;
        $this->container['contactCacheClear'] = isset($data['contactCacheClear']) ? $data['contactCacheClear'] : null;
        $this->container['listCacheClear'] = isset($data['listCacheClear']) ? $data['listCacheClear'] : null;
        $this->container['customFieldsCacheClear'] = isset($data['customFieldsCacheClear']) ? $data['customFieldsCacheClear'] : null;
        $this->container['progressCarrierBulkLookup'] = isset($data['progressCarrierBulkLookup']) ? $data['progressCarrierBulkLookup'] : null;
        $this->container['progressEmailBulkLookup'] = isset($data['progressEmailBulkLookup']) ? $data['progressEmailBulkLookup'] : null;
        $this->container['progressSubAccountBulkImport'] = isset($data['progressSubAccountBulkImport']) ? $data['progressSubAccountBulkImport'] : null;
        $this->container['progressContactBulkImport'] = isset($data['progressContactBulkImport']) ? $data['progressContactBulkImport'] : null;
        $this->container['forceRefreshWebApp'] = isset($data['forceRefreshWebApp']) ? $data['forceRefreshWebApp'] : null;
        $this->container['chatSenderSettingsChanged'] = isset($data['chatSenderSettingsChanged']) ? $data['chatSenderSettingsChanged'] : null;
        $this->container['countrySenderSettingsChanged'] = isset($data['countrySenderSettingsChanged']) ? $data['countrySenderSettingsChanged'] : null;
        $this->container['chatSummaryChunk'] = isset($data['chatSummaryChunk']) ? $data['chatSummaryChunk'] : null;
        $this->container['chatWaysToReplyChunk'] = isset($data['chatWaysToReplyChunk']) ? $data['chatWaysToReplyChunk'] : null;
        $this->container['chatSuggestedReplyChunk'] = isset($data['chatSuggestedReplyChunk']) ? $data['chatSuggestedReplyChunk'] : null;
        $this->container['userSubscriptionChanged'] = isset($data['userSubscriptionChanged']) ? $data['userSubscriptionChanged'] : null;
        $this->container['userSubscriptionDeleted'] = isset($data['userSubscriptionDeleted']) ? $data['userSubscriptionDeleted'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['systemCacheClear'] === null) {
            $invalidProperties[] = "'systemCacheClear' can't be null";
        }
        if ($this->container['systemExit'] === null) {
            $invalidProperties[] = "'systemExit' can't be null";
        }
        if ($this->container['systemAlert'] === null) {
            $invalidProperties[] = "'systemAlert' can't be null";
        }
        if ($this->container['systemAccountStateChanged'] === null) {
            $invalidProperties[] = "'systemAccountStateChanged' can't be null";
        }
        if ($this->container['systemAccountClosed'] === null) {
            $invalidProperties[] = "'systemAccountClosed' can't be null";
        }
        if ($this->container['systemAccountAdditionalFields'] === null) {
            $invalidProperties[] = "'systemAccountAdditionalFields' can't be null";
        }
        if ($this->container['systemAccountPermissionsChanged'] === null) {
            $invalidProperties[] = "'systemAccountPermissionsChanged' can't be null";
        }
        if ($this->container['userProfileChanged'] === null) {
            $invalidProperties[] = "'userProfileChanged' can't be null";
        }
        if ($this->container['userBalanceChanged'] === null) {
            $invalidProperties[] = "'userBalanceChanged' can't be null";
        }
        if ($this->container['userImpersonationEnd'] === null) {
            $invalidProperties[] = "'userImpersonationEnd' can't be null";
        }
        if ($this->container['messageDeleted'] === null) {
            $invalidProperties[] = "'messageDeleted' can't be null";
        }
        if ($this->container['messageIncoming'] === null) {
            $invalidProperties[] = "'messageIncoming' can't be null";
        }
        if ($this->container['messageIncomingDeleted'] === null) {
            $invalidProperties[] = "'messageIncomingDeleted' can't be null";
        }
        if ($this->container['messageStateChanged'] === null) {
            $invalidProperties[] = "'messageStateChanged' can't be null";
        }
        if ($this->container['messageBulkEnd'] === null) {
            $invalidProperties[] = "'messageBulkEnd' can't be null";
        }
        if ($this->container['messageWipeEnd'] === null) {
            $invalidProperties[] = "'messageWipeEnd' can't be null";
        }
        if ($this->container['messageSent'] === null) {
            $invalidProperties[] = "'messageSent' can't be null";
        }
        if ($this->container['messageSessionDeleted'] === null) {
            $invalidProperties[] = "'messageSessionDeleted' can't be null";
        }
        if ($this->container['messageCacheClear'] === null) {
            $invalidProperties[] = "'messageCacheClear' can't be null";
        }
        if ($this->container['messageIncomingCacheClear'] === null) {
            $invalidProperties[] = "'messageIncomingCacheClear' can't be null";
        }
        if ($this->container['messageScheduleAdded'] === null) {
            $invalidProperties[] = "'messageScheduleAdded' can't be null";
        }
        if ($this->container['messageScheduleStateChanged'] === null) {
            $invalidProperties[] = "'messageScheduleStateChanged' can't be null";
        }
        if ($this->container['messageScheduleDeleted'] === null) {
            $invalidProperties[] = "'messageScheduleDeleted' can't be null";
        }
        if ($this->container['messageScheduleNotSentStateChanged'] === null) {
            $invalidProperties[] = "'messageScheduleNotSentStateChanged' can't be null";
        }
        if ($this->container['messageScheduleCacheClear'] === null) {
            $invalidProperties[] = "'messageScheduleCacheClear' can't be null";
        }
        if ($this->container['messageTemplateCacheClear'] === null) {
            $invalidProperties[] = "'messageTemplateCacheClear' can't be null";
        }
        if ($this->container['callFinished'] === null) {
            $invalidProperties[] = "'callFinished' can't be null";
        }
        if ($this->container['chatCreated'] === null) {
            $invalidProperties[] = "'chatCreated' can't be null";
        }
        if ($this->container['chatMarkedAsRead'] === null) {
            $invalidProperties[] = "'chatMarkedAsRead' can't be null";
        }
        if ($this->container['chatMuted'] === null) {
            $invalidProperties[] = "'chatMuted' can't be null";
        }
        if ($this->container['chatUnmuted'] === null) {
            $invalidProperties[] = "'chatUnmuted' can't be null";
        }
        if ($this->container['chatPinned'] === null) {
            $invalidProperties[] = "'chatPinned' can't be null";
        }
        if ($this->container['chatUnpinned'] === null) {
            $invalidProperties[] = "'chatUnpinned' can't be null";
        }
        if ($this->container['chatDeleted'] === null) {
            $invalidProperties[] = "'chatDeleted' can't be null";
        }
        if ($this->container['chatClosed'] === null) {
            $invalidProperties[] = "'chatClosed' can't be null";
        }
        if ($this->container['chatReopened'] === null) {
            $invalidProperties[] = "'chatReopened' can't be null";
        }
        if ($this->container['chatCacheClear'] === null) {
            $invalidProperties[] = "'chatCacheClear' can't be null";
        }
        if ($this->container['chatRead'] === null) {
            $invalidProperties[] = "'chatRead' can't be null";
        }
        if ($this->container['chatUnread'] === null) {
            $invalidProperties[] = "'chatUnread' can't be null";
        }
        if ($this->container['contactAdded'] === null) {
            $invalidProperties[] = "'contactAdded' can't be null";
        }
        if ($this->container['contactDeleted'] === null) {
            $invalidProperties[] = "'contactDeleted' can't be null";
        }
        if ($this->container['contactStateChanged'] === null) {
            $invalidProperties[] = "'contactStateChanged' can't be null";
        }
        if ($this->container['listAdded'] === null) {
            $invalidProperties[] = "'listAdded' can't be null";
        }
        if ($this->container['listDeleted'] === null) {
            $invalidProperties[] = "'listDeleted' can't be null";
        }
        if ($this->container['listStateChanged'] === null) {
            $invalidProperties[] = "'listStateChanged' can't be null";
        }
        if ($this->container['contactWipeEnd'] === null) {
            $invalidProperties[] = "'contactWipeEnd' can't be null";
        }
        if ($this->container['contactImportEnd'] === null) {
            $invalidProperties[] = "'contactImportEnd' can't be null";
        }
        if ($this->container['contactCacheClear'] === null) {
            $invalidProperties[] = "'contactCacheClear' can't be null";
        }
        if ($this->container['listCacheClear'] === null) {
            $invalidProperties[] = "'listCacheClear' can't be null";
        }
        if ($this->container['customFieldsCacheClear'] === null) {
            $invalidProperties[] = "'customFieldsCacheClear' can't be null";
        }
        if ($this->container['progressCarrierBulkLookup'] === null) {
            $invalidProperties[] = "'progressCarrierBulkLookup' can't be null";
        }
        if ($this->container['progressEmailBulkLookup'] === null) {
            $invalidProperties[] = "'progressEmailBulkLookup' can't be null";
        }
        if ($this->container['progressSubAccountBulkImport'] === null) {
            $invalidProperties[] = "'progressSubAccountBulkImport' can't be null";
        }
        if ($this->container['progressContactBulkImport'] === null) {
            $invalidProperties[] = "'progressContactBulkImport' can't be null";
        }
        if ($this->container['forceRefreshWebApp'] === null) {
            $invalidProperties[] = "'forceRefreshWebApp' can't be null";
        }
        if ($this->container['chatSenderSettingsChanged'] === null) {
            $invalidProperties[] = "'chatSenderSettingsChanged' can't be null";
        }
        if ($this->container['countrySenderSettingsChanged'] === null) {
            $invalidProperties[] = "'countrySenderSettingsChanged' can't be null";
        }
        if ($this->container['chatSummaryChunk'] === null) {
            $invalidProperties[] = "'chatSummaryChunk' can't be null";
        }
        if ($this->container['chatWaysToReplyChunk'] === null) {
            $invalidProperties[] = "'chatWaysToReplyChunk' can't be null";
        }
        if ($this->container['chatSuggestedReplyChunk'] === null) {
            $invalidProperties[] = "'chatSuggestedReplyChunk' can't be null";
        }
        if ($this->container['userSubscriptionChanged'] === null) {
            $invalidProperties[] = "'userSubscriptionChanged' can't be null";
        }
        if ($this->container['userSubscriptionDeleted'] === null) {
            $invalidProperties[] = "'userSubscriptionDeleted' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets systemCacheClear
     *
     * @return int
     */
    public function getSystemCacheClear()
    {
        return $this->container['systemCacheClear'];
    }

    /**
     * Sets systemCacheClear
     *
     * @param int $systemCacheClear systemCacheClear
     *
     * @return $this
     */
    public function setSystemCacheClear($systemCacheClear)
    {
        $this->container['systemCacheClear'] = $systemCacheClear;

        return $this;
    }

    /**
     * Gets systemExit
     *
     * @return int
     */
    public function getSystemExit()
    {
        return $this->container['systemExit'];
    }

    /**
     * Sets systemExit
     *
     * @param int $systemExit systemExit
     *
     * @return $this
     */
    public function setSystemExit($systemExit)
    {
        $this->container['systemExit'] = $systemExit;

        return $this;
    }

    /**
     * Gets systemAlert
     *
     * @return int
     */
    public function getSystemAlert()
    {
        return $this->container['systemAlert'];
    }

    /**
     * Sets systemAlert
     *
     * @param int $systemAlert systemAlert
     *
     * @return $this
     */
    public function setSystemAlert($systemAlert)
    {
        $this->container['systemAlert'] = $systemAlert;

        return $this;
    }

    /**
     * Gets systemAccountStateChanged
     *
     * @return int
     */
    public function getSystemAccountStateChanged()
    {
        return $this->container['systemAccountStateChanged'];
    }

    /**
     * Sets systemAccountStateChanged
     *
     * @param int $systemAccountStateChanged systemAccountStateChanged
     *
     * @return $this
     */
    public function setSystemAccountStateChanged($systemAccountStateChanged)
    {
        $this->container['systemAccountStateChanged'] = $systemAccountStateChanged;

        return $this;
    }

    /**
     * Gets systemAccountClosed
     *
     * @return int
     */
    public function getSystemAccountClosed()
    {
        return $this->container['systemAccountClosed'];
    }

    /**
     * Sets systemAccountClosed
     *
     * @param int $systemAccountClosed systemAccountClosed
     *
     * @return $this
     */
    public function setSystemAccountClosed($systemAccountClosed)
    {
        $this->container['systemAccountClosed'] = $systemAccountClosed;

        return $this;
    }

    /**
     * Gets systemAccountAdditionalFields
     *
     * @return int
     */
    public function getSystemAccountAdditionalFields()
    {
        return $this->container['systemAccountAdditionalFields'];
    }

    /**
     * Sets systemAccountAdditionalFields
     *
     * @param int $systemAccountAdditionalFields systemAccountAdditionalFields
     *
     * @return $this
     */
    public function setSystemAccountAdditionalFields($systemAccountAdditionalFields)
    {
        $this->container['systemAccountAdditionalFields'] = $systemAccountAdditionalFields;

        return $this;
    }

    /**
     * Gets systemAccountPermissionsChanged
     *
     * @return int
     */
    public function getSystemAccountPermissionsChanged()
    {
        return $this->container['systemAccountPermissionsChanged'];
    }

    /**
     * Sets systemAccountPermissionsChanged
     *
     * @param int $systemAccountPermissionsChanged systemAccountPermissionsChanged
     *
     * @return $this
     */
    public function setSystemAccountPermissionsChanged($systemAccountPermissionsChanged)
    {
        $this->container['systemAccountPermissionsChanged'] = $systemAccountPermissionsChanged;

        return $this;
    }

    /**
     * Gets userProfileChanged
     *
     * @return int
     */
    public function getUserProfileChanged()
    {
        return $this->container['userProfileChanged'];
    }

    /**
     * Sets userProfileChanged
     *
     * @param int $userProfileChanged userProfileChanged
     *
     * @return $this
     */
    public function setUserProfileChanged($userProfileChanged)
    {
        $this->container['userProfileChanged'] = $userProfileChanged;

        return $this;
    }

    /**
     * Gets userBalanceChanged
     *
     * @return int
     */
    public function getUserBalanceChanged()
    {
        return $this->container['userBalanceChanged'];
    }

    /**
     * Sets userBalanceChanged
     *
     * @param int $userBalanceChanged userBalanceChanged
     *
     * @return $this
     */
    public function setUserBalanceChanged($userBalanceChanged)
    {
        $this->container['userBalanceChanged'] = $userBalanceChanged;

        return $this;
    }

    /**
     * Gets userImpersonationEnd
     *
     * @return int
     */
    public function getUserImpersonationEnd()
    {
        return $this->container['userImpersonationEnd'];
    }

    /**
     * Sets userImpersonationEnd
     *
     * @param int $userImpersonationEnd userImpersonationEnd
     *
     * @return $this
     */
    public function setUserImpersonationEnd($userImpersonationEnd)
    {
        $this->container['userImpersonationEnd'] = $userImpersonationEnd;

        return $this;
    }

    /**
     * Gets messageDeleted
     *
     * @return int
     */
    public function getMessageDeleted()
    {
        return $this->container['messageDeleted'];
    }

    /**
     * Sets messageDeleted
     *
     * @param int $messageDeleted messageDeleted
     *
     * @return $this
     */
    public function setMessageDeleted($messageDeleted)
    {
        $this->container['messageDeleted'] = $messageDeleted;

        return $this;
    }

    /**
     * Gets messageIncoming
     *
     * @return int
     */
    public function getMessageIncoming()
    {
        return $this->container['messageIncoming'];
    }

    /**
     * Sets messageIncoming
     *
     * @param int $messageIncoming messageIncoming
     *
     * @return $this
     */
    public function setMessageIncoming($messageIncoming)
    {
        $this->container['messageIncoming'] = $messageIncoming;

        return $this;
    }

    /**
     * Gets messageIncomingDeleted
     *
     * @return int
     */
    public function getMessageIncomingDeleted()
    {
        return $this->container['messageIncomingDeleted'];
    }

    /**
     * Sets messageIncomingDeleted
     *
     * @param int $messageIncomingDeleted messageIncomingDeleted
     *
     * @return $this
     */
    public function setMessageIncomingDeleted($messageIncomingDeleted)
    {
        $this->container['messageIncomingDeleted'] = $messageIncomingDeleted;

        return $this;
    }

    /**
     * Gets messageStateChanged
     *
     * @return int
     */
    public function getMessageStateChanged()
    {
        return $this->container['messageStateChanged'];
    }

    /**
     * Sets messageStateChanged
     *
     * @param int $messageStateChanged messageStateChanged
     *
     * @return $this
     */
    public function setMessageStateChanged($messageStateChanged)
    {
        $this->container['messageStateChanged'] = $messageStateChanged;

        return $this;
    }

    /**
     * Gets messageBulkEnd
     *
     * @return int
     */
    public function getMessageBulkEnd()
    {
        return $this->container['messageBulkEnd'];
    }

    /**
     * Sets messageBulkEnd
     *
     * @param int $messageBulkEnd messageBulkEnd
     *
     * @return $this
     */
    public function setMessageBulkEnd($messageBulkEnd)
    {
        $this->container['messageBulkEnd'] = $messageBulkEnd;

        return $this;
    }

    /**
     * Gets messageWipeEnd
     *
     * @return int
     */
    public function getMessageWipeEnd()
    {
        return $this->container['messageWipeEnd'];
    }

    /**
     * Sets messageWipeEnd
     *
     * @param int $messageWipeEnd messageWipeEnd
     *
     * @return $this
     */
    public function setMessageWipeEnd($messageWipeEnd)
    {
        $this->container['messageWipeEnd'] = $messageWipeEnd;

        return $this;
    }

    /**
     * Gets messageSent
     *
     * @return int
     */
    public function getMessageSent()
    {
        return $this->container['messageSent'];
    }

    /**
     * Sets messageSent
     *
     * @param int $messageSent messageSent
     *
     * @return $this
     */
    public function setMessageSent($messageSent)
    {
        $this->container['messageSent'] = $messageSent;

        return $this;
    }

    /**
     * Gets messageSessionDeleted
     *
     * @return int
     */
    public function getMessageSessionDeleted()
    {
        return $this->container['messageSessionDeleted'];
    }

    /**
     * Sets messageSessionDeleted
     *
     * @param int $messageSessionDeleted messageSessionDeleted
     *
     * @return $this
     */
    public function setMessageSessionDeleted($messageSessionDeleted)
    {
        $this->container['messageSessionDeleted'] = $messageSessionDeleted;

        return $this;
    }

    /**
     * Gets messageCacheClear
     *
     * @return int
     */
    public function getMessageCacheClear()
    {
        return $this->container['messageCacheClear'];
    }

    /**
     * Sets messageCacheClear
     *
     * @param int $messageCacheClear messageCacheClear
     *
     * @return $this
     */
    public function setMessageCacheClear($messageCacheClear)
    {
        $this->container['messageCacheClear'] = $messageCacheClear;

        return $this;
    }

    /**
     * Gets messageIncomingCacheClear
     *
     * @return int
     */
    public function getMessageIncomingCacheClear()
    {
        return $this->container['messageIncomingCacheClear'];
    }

    /**
     * Sets messageIncomingCacheClear
     *
     * @param int $messageIncomingCacheClear messageIncomingCacheClear
     *
     * @return $this
     */
    public function setMessageIncomingCacheClear($messageIncomingCacheClear)
    {
        $this->container['messageIncomingCacheClear'] = $messageIncomingCacheClear;

        return $this;
    }

    /**
     * Gets messageScheduleAdded
     *
     * @return int
     */
    public function getMessageScheduleAdded()
    {
        return $this->container['messageScheduleAdded'];
    }

    /**
     * Sets messageScheduleAdded
     *
     * @param int $messageScheduleAdded messageScheduleAdded
     *
     * @return $this
     */
    public function setMessageScheduleAdded($messageScheduleAdded)
    {
        $this->container['messageScheduleAdded'] = $messageScheduleAdded;

        return $this;
    }

    /**
     * Gets messageScheduleStateChanged
     *
     * @return int
     */
    public function getMessageScheduleStateChanged()
    {
        return $this->container['messageScheduleStateChanged'];
    }

    /**
     * Sets messageScheduleStateChanged
     *
     * @param int $messageScheduleStateChanged messageScheduleStateChanged
     *
     * @return $this
     */
    public function setMessageScheduleStateChanged($messageScheduleStateChanged)
    {
        $this->container['messageScheduleStateChanged'] = $messageScheduleStateChanged;

        return $this;
    }

    /**
     * Gets messageScheduleDeleted
     *
     * @return int
     */
    public function getMessageScheduleDeleted()
    {
        return $this->container['messageScheduleDeleted'];
    }

    /**
     * Sets messageScheduleDeleted
     *
     * @param int $messageScheduleDeleted messageScheduleDeleted
     *
     * @return $this
     */
    public function setMessageScheduleDeleted($messageScheduleDeleted)
    {
        $this->container['messageScheduleDeleted'] = $messageScheduleDeleted;

        return $this;
    }

    /**
     * Gets messageScheduleNotSentStateChanged
     *
     * @return int
     */
    public function getMessageScheduleNotSentStateChanged()
    {
        return $this->container['messageScheduleNotSentStateChanged'];
    }

    /**
     * Sets messageScheduleNotSentStateChanged
     *
     * @param int $messageScheduleNotSentStateChanged messageScheduleNotSentStateChanged
     *
     * @return $this
     */
    public function setMessageScheduleNotSentStateChanged($messageScheduleNotSentStateChanged)
    {
        $this->container['messageScheduleNotSentStateChanged'] = $messageScheduleNotSentStateChanged;

        return $this;
    }

    /**
     * Gets messageScheduleCacheClear
     *
     * @return int
     */
    public function getMessageScheduleCacheClear()
    {
        return $this->container['messageScheduleCacheClear'];
    }

    /**
     * Sets messageScheduleCacheClear
     *
     * @param int $messageScheduleCacheClear messageScheduleCacheClear
     *
     * @return $this
     */
    public function setMessageScheduleCacheClear($messageScheduleCacheClear)
    {
        $this->container['messageScheduleCacheClear'] = $messageScheduleCacheClear;

        return $this;
    }

    /**
     * Gets messageTemplateCacheClear
     *
     * @return int
     */
    public function getMessageTemplateCacheClear()
    {
        return $this->container['messageTemplateCacheClear'];
    }

    /**
     * Sets messageTemplateCacheClear
     *
     * @param int $messageTemplateCacheClear messageTemplateCacheClear
     *
     * @return $this
     */
    public function setMessageTemplateCacheClear($messageTemplateCacheClear)
    {
        $this->container['messageTemplateCacheClear'] = $messageTemplateCacheClear;

        return $this;
    }

    /**
     * Gets callFinished
     *
     * @return int
     */
    public function getCallFinished()
    {
        return $this->container['callFinished'];
    }

    /**
     * Sets callFinished
     *
     * @param int $callFinished callFinished
     *
     * @return $this
     */
    public function setCallFinished($callFinished)
    {
        $this->container['callFinished'] = $callFinished;

        return $this;
    }

    /**
     * Gets chatCreated
     *
     * @return int
     */
    public function getChatCreated()
    {
        return $this->container['chatCreated'];
    }

    /**
     * Sets chatCreated
     *
     * @param int $chatCreated chatCreated
     *
     * @return $this
     */
    public function setChatCreated($chatCreated)
    {
        $this->container['chatCreated'] = $chatCreated;

        return $this;
    }

    /**
     * Gets chatMarkedAsRead
     *
     * @return int
     */
    public function getChatMarkedAsRead()
    {
        return $this->container['chatMarkedAsRead'];
    }

    /**
     * Sets chatMarkedAsRead
     *
     * @param int $chatMarkedAsRead chatMarkedAsRead
     *
     * @return $this
     */
    public function setChatMarkedAsRead($chatMarkedAsRead)
    {
        $this->container['chatMarkedAsRead'] = $chatMarkedAsRead;

        return $this;
    }

    /**
     * Gets chatMuted
     *
     * @return int
     */
    public function getChatMuted()
    {
        return $this->container['chatMuted'];
    }

    /**
     * Sets chatMuted
     *
     * @param int $chatMuted chatMuted
     *
     * @return $this
     */
    public function setChatMuted($chatMuted)
    {
        $this->container['chatMuted'] = $chatMuted;

        return $this;
    }

    /**
     * Gets chatUnmuted
     *
     * @return int
     */
    public function getChatUnmuted()
    {
        return $this->container['chatUnmuted'];
    }

    /**
     * Sets chatUnmuted
     *
     * @param int $chatUnmuted chatUnmuted
     *
     * @return $this
     */
    public function setChatUnmuted($chatUnmuted)
    {
        $this->container['chatUnmuted'] = $chatUnmuted;

        return $this;
    }

    /**
     * Gets chatPinned
     *
     * @return int
     */
    public function getChatPinned()
    {
        return $this->container['chatPinned'];
    }

    /**
     * Sets chatPinned
     *
     * @param int $chatPinned chatPinned
     *
     * @return $this
     */
    public function setChatPinned($chatPinned)
    {
        $this->container['chatPinned'] = $chatPinned;

        return $this;
    }

    /**
     * Gets chatUnpinned
     *
     * @return int
     */
    public function getChatUnpinned()
    {
        return $this->container['chatUnpinned'];
    }

    /**
     * Sets chatUnpinned
     *
     * @param int $chatUnpinned chatUnpinned
     *
     * @return $this
     */
    public function setChatUnpinned($chatUnpinned)
    {
        $this->container['chatUnpinned'] = $chatUnpinned;

        return $this;
    }

    /**
     * Gets chatDeleted
     *
     * @return int
     */
    public function getChatDeleted()
    {
        return $this->container['chatDeleted'];
    }

    /**
     * Sets chatDeleted
     *
     * @param int $chatDeleted chatDeleted
     *
     * @return $this
     */
    public function setChatDeleted($chatDeleted)
    {
        $this->container['chatDeleted'] = $chatDeleted;

        return $this;
    }

    /**
     * Gets chatClosed
     *
     * @return int
     */
    public function getChatClosed()
    {
        return $this->container['chatClosed'];
    }

    /**
     * Sets chatClosed
     *
     * @param int $chatClosed chatClosed
     *
     * @return $this
     */
    public function setChatClosed($chatClosed)
    {
        $this->container['chatClosed'] = $chatClosed;

        return $this;
    }

    /**
     * Gets chatReopened
     *
     * @return int
     */
    public function getChatReopened()
    {
        return $this->container['chatReopened'];
    }

    /**
     * Sets chatReopened
     *
     * @param int $chatReopened chatReopened
     *
     * @return $this
     */
    public function setChatReopened($chatReopened)
    {
        $this->container['chatReopened'] = $chatReopened;

        return $this;
    }

    /**
     * Gets chatCacheClear
     *
     * @return int
     */
    public function getChatCacheClear()
    {
        return $this->container['chatCacheClear'];
    }

    /**
     * Sets chatCacheClear
     *
     * @param int $chatCacheClear chatCacheClear
     *
     * @return $this
     */
    public function setChatCacheClear($chatCacheClear)
    {
        $this->container['chatCacheClear'] = $chatCacheClear;

        return $this;
    }

    /**
     * Gets chatRead
     *
     * @return int
     */
    public function getChatRead()
    {
        return $this->container['chatRead'];
    }

    /**
     * Sets chatRead
     *
     * @param int $chatRead chatRead
     *
     * @return $this
     */
    public function setChatRead($chatRead)
    {
        $this->container['chatRead'] = $chatRead;

        return $this;
    }

    /**
     * Gets chatUnread
     *
     * @return int
     */
    public function getChatUnread()
    {
        return $this->container['chatUnread'];
    }

    /**
     * Sets chatUnread
     *
     * @param int $chatUnread chatUnread
     *
     * @return $this
     */
    public function setChatUnread($chatUnread)
    {
        $this->container['chatUnread'] = $chatUnread;

        return $this;
    }

    /**
     * Gets contactAdded
     *
     * @return int
     */
    public function getContactAdded()
    {
        return $this->container['contactAdded'];
    }

    /**
     * Sets contactAdded
     *
     * @param int $contactAdded contactAdded
     *
     * @return $this
     */
    public function setContactAdded($contactAdded)
    {
        $this->container['contactAdded'] = $contactAdded;

        return $this;
    }

    /**
     * Gets contactDeleted
     *
     * @return int
     */
    public function getContactDeleted()
    {
        return $this->container['contactDeleted'];
    }

    /**
     * Sets contactDeleted
     *
     * @param int $contactDeleted contactDeleted
     *
     * @return $this
     */
    public function setContactDeleted($contactDeleted)
    {
        $this->container['contactDeleted'] = $contactDeleted;

        return $this;
    }

    /**
     * Gets contactStateChanged
     *
     * @return int
     */
    public function getContactStateChanged()
    {
        return $this->container['contactStateChanged'];
    }

    /**
     * Sets contactStateChanged
     *
     * @param int $contactStateChanged contactStateChanged
     *
     * @return $this
     */
    public function setContactStateChanged($contactStateChanged)
    {
        $this->container['contactStateChanged'] = $contactStateChanged;

        return $this;
    }

    /**
     * Gets listAdded
     *
     * @return int
     */
    public function getListAdded()
    {
        return $this->container['listAdded'];
    }

    /**
     * Sets listAdded
     *
     * @param int $listAdded listAdded
     *
     * @return $this
     */
    public function setListAdded($listAdded)
    {
        $this->container['listAdded'] = $listAdded;

        return $this;
    }

    /**
     * Gets listDeleted
     *
     * @return int
     */
    public function getListDeleted()
    {
        return $this->container['listDeleted'];
    }

    /**
     * Sets listDeleted
     *
     * @param int $listDeleted listDeleted
     *
     * @return $this
     */
    public function setListDeleted($listDeleted)
    {
        $this->container['listDeleted'] = $listDeleted;

        return $this;
    }

    /**
     * Gets listStateChanged
     *
     * @return int
     */
    public function getListStateChanged()
    {
        return $this->container['listStateChanged'];
    }

    /**
     * Sets listStateChanged
     *
     * @param int $listStateChanged listStateChanged
     *
     * @return $this
     */
    public function setListStateChanged($listStateChanged)
    {
        $this->container['listStateChanged'] = $listStateChanged;

        return $this;
    }

    /**
     * Gets contactWipeEnd
     *
     * @return int
     */
    public function getContactWipeEnd()
    {
        return $this->container['contactWipeEnd'];
    }

    /**
     * Sets contactWipeEnd
     *
     * @param int $contactWipeEnd contactWipeEnd
     *
     * @return $this
     */
    public function setContactWipeEnd($contactWipeEnd)
    {
        $this->container['contactWipeEnd'] = $contactWipeEnd;

        return $this;
    }

    /**
     * Gets contactImportEnd
     *
     * @return int
     */
    public function getContactImportEnd()
    {
        return $this->container['contactImportEnd'];
    }

    /**
     * Sets contactImportEnd
     *
     * @param int $contactImportEnd contactImportEnd
     *
     * @return $this
     */
    public function setContactImportEnd($contactImportEnd)
    {
        $this->container['contactImportEnd'] = $contactImportEnd;

        return $this;
    }

    /**
     * Gets contactCacheClear
     *
     * @return int
     */
    public function getContactCacheClear()
    {
        return $this->container['contactCacheClear'];
    }

    /**
     * Sets contactCacheClear
     *
     * @param int $contactCacheClear contactCacheClear
     *
     * @return $this
     */
    public function setContactCacheClear($contactCacheClear)
    {
        $this->container['contactCacheClear'] = $contactCacheClear;

        return $this;
    }

    /**
     * Gets listCacheClear
     *
     * @return int
     */
    public function getListCacheClear()
    {
        return $this->container['listCacheClear'];
    }

    /**
     * Sets listCacheClear
     *
     * @param int $listCacheClear listCacheClear
     *
     * @return $this
     */
    public function setListCacheClear($listCacheClear)
    {
        $this->container['listCacheClear'] = $listCacheClear;

        return $this;
    }

    /**
     * Gets customFieldsCacheClear
     *
     * @return int
     */
    public function getCustomFieldsCacheClear()
    {
        return $this->container['customFieldsCacheClear'];
    }

    /**
     * Sets customFieldsCacheClear
     *
     * @param int $customFieldsCacheClear customFieldsCacheClear
     *
     * @return $this
     */
    public function setCustomFieldsCacheClear($customFieldsCacheClear)
    {
        $this->container['customFieldsCacheClear'] = $customFieldsCacheClear;

        return $this;
    }

    /**
     * Gets progressCarrierBulkLookup
     *
     * @return int
     */
    public function getProgressCarrierBulkLookup()
    {
        return $this->container['progressCarrierBulkLookup'];
    }

    /**
     * Sets progressCarrierBulkLookup
     *
     * @param int $progressCarrierBulkLookup progressCarrierBulkLookup
     *
     * @return $this
     */
    public function setProgressCarrierBulkLookup($progressCarrierBulkLookup)
    {
        $this->container['progressCarrierBulkLookup'] = $progressCarrierBulkLookup;

        return $this;
    }

    /**
     * Gets progressEmailBulkLookup
     *
     * @return int
     */
    public function getProgressEmailBulkLookup()
    {
        return $this->container['progressEmailBulkLookup'];
    }

    /**
     * Sets progressEmailBulkLookup
     *
     * @param int $progressEmailBulkLookup progressEmailBulkLookup
     *
     * @return $this
     */
    public function setProgressEmailBulkLookup($progressEmailBulkLookup)
    {
        $this->container['progressEmailBulkLookup'] = $progressEmailBulkLookup;

        return $this;
    }

    /**
     * Gets progressSubAccountBulkImport
     *
     * @return int
     */
    public function getProgressSubAccountBulkImport()
    {
        return $this->container['progressSubAccountBulkImport'];
    }

    /**
     * Sets progressSubAccountBulkImport
     *
     * @param int $progressSubAccountBulkImport progressSubAccountBulkImport
     *
     * @return $this
     */
    public function setProgressSubAccountBulkImport($progressSubAccountBulkImport)
    {
        $this->container['progressSubAccountBulkImport'] = $progressSubAccountBulkImport;

        return $this;
    }

    /**
     * Gets progressContactBulkImport
     *
     * @return int
     */
    public function getProgressContactBulkImport()
    {
        return $this->container['progressContactBulkImport'];
    }

    /**
     * Sets progressContactBulkImport
     *
     * @param int $progressContactBulkImport progressContactBulkImport
     *
     * @return $this
     */
    public function setProgressContactBulkImport($progressContactBulkImport)
    {
        $this->container['progressContactBulkImport'] = $progressContactBulkImport;

        return $this;
    }

    /**
     * Gets forceRefreshWebApp
     *
     * @return int
     */
    public function getForceRefreshWebApp()
    {
        return $this->container['forceRefreshWebApp'];
    }

    /**
     * Sets forceRefreshWebApp
     *
     * @param int $forceRefreshWebApp forceRefreshWebApp
     *
     * @return $this
     */
    public function setForceRefreshWebApp($forceRefreshWebApp)
    {
        $this->container['forceRefreshWebApp'] = $forceRefreshWebApp;

        return $this;
    }

    /**
     * Gets chatSenderSettingsChanged
     *
     * @return int
     */
    public function getChatSenderSettingsChanged()
    {
        return $this->container['chatSenderSettingsChanged'];
    }

    /**
     * Sets chatSenderSettingsChanged
     *
     * @param int $chatSenderSettingsChanged chatSenderSettingsChanged
     *
     * @return $this
     */
    public function setChatSenderSettingsChanged($chatSenderSettingsChanged)
    {
        $this->container['chatSenderSettingsChanged'] = $chatSenderSettingsChanged;

        return $this;
    }

    /**
     * Gets countrySenderSettingsChanged
     *
     * @return int
     */
    public function getCountrySenderSettingsChanged()
    {
        return $this->container['countrySenderSettingsChanged'];
    }

    /**
     * Sets countrySenderSettingsChanged
     *
     * @param int $countrySenderSettingsChanged countrySenderSettingsChanged
     *
     * @return $this
     */
    public function setCountrySenderSettingsChanged($countrySenderSettingsChanged)
    {
        $this->container['countrySenderSettingsChanged'] = $countrySenderSettingsChanged;

        return $this;
    }

    /**
     * Gets chatSummaryChunk
     *
     * @return int
     */
    public function getChatSummaryChunk()
    {
        return $this->container['chatSummaryChunk'];
    }

    /**
     * Sets chatSummaryChunk
     *
     * @param int $chatSummaryChunk chatSummaryChunk
     *
     * @return $this
     */
    public function setChatSummaryChunk($chatSummaryChunk)
    {
        $this->container['chatSummaryChunk'] = $chatSummaryChunk;

        return $this;
    }

    /**
     * Gets chatWaysToReplyChunk
     *
     * @return int
     */
    public function getChatWaysToReplyChunk()
    {
        return $this->container['chatWaysToReplyChunk'];
    }

    /**
     * Sets chatWaysToReplyChunk
     *
     * @param int $chatWaysToReplyChunk chatWaysToReplyChunk
     *
     * @return $this
     */
    public function setChatWaysToReplyChunk($chatWaysToReplyChunk)
    {
        $this->container['chatWaysToReplyChunk'] = $chatWaysToReplyChunk;

        return $this;
    }

    /**
     * Gets chatSuggestedReplyChunk
     *
     * @return int
     */
    public function getChatSuggestedReplyChunk()
    {
        return $this->container['chatSuggestedReplyChunk'];
    }

    /**
     * Sets chatSuggestedReplyChunk
     *
     * @param int $chatSuggestedReplyChunk chatSuggestedReplyChunk
     *
     * @return $this
     */
    public function setChatSuggestedReplyChunk($chatSuggestedReplyChunk)
    {
        $this->container['chatSuggestedReplyChunk'] = $chatSuggestedReplyChunk;

        return $this;
    }

    /**
     * Gets userSubscriptionChanged
     *
     * @return int
     */
    public function getUserSubscriptionChanged()
    {
        return $this->container['userSubscriptionChanged'];
    }

    /**
     * Sets userSubscriptionChanged
     *
     * @param int $userSubscriptionChanged userSubscriptionChanged
     *
     * @return $this
     */
    public function setUserSubscriptionChanged($userSubscriptionChanged)
    {
        $this->container['userSubscriptionChanged'] = $userSubscriptionChanged;

        return $this;
    }

    /**
     * Gets userSubscriptionDeleted
     *
     * @return int
     */
    public function getUserSubscriptionDeleted()
    {
        return $this->container['userSubscriptionDeleted'];
    }

    /**
     * Sets userSubscriptionDeleted
     *
     * @param int $userSubscriptionDeleted userSubscriptionDeleted
     *
     * @return $this
     */
    public function setUserSubscriptionDeleted($userSubscriptionDeleted)
    {
        $this->container['userSubscriptionDeleted'] = $userSubscriptionDeleted;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


